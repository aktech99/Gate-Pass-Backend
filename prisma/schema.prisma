// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String     @id @default(cuid())
  email         String     @unique
  name          String
  password      String
  role          UserRole   @default(STUDENT)
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  isApproved    Boolean    @default(false)
  requestsSent  GatePass[] @relation("StudentRequests")
  requestsApproved GatePass[] @relation("TeacherApprovals")
}

model GatePass {
  id          String    @id @default(cuid())
  studentId   String    
  teacherId   String?   
  reason      String
  status      PassStatus @default(PENDING)
  remarks     String?
  requestDate DateTime
  validUntil  DateTime
  qrCode      String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  student     User      @relation("StudentRequests", fields: [studentId], references: [id])
  teacher     User?     @relation("TeacherApprovals", fields: [teacherId], references: [id])
}

enum UserRole {
  SUPER_ADMIN
  TEACHER
  STUDENT
  SECURITY
}

enum PassStatus {
  PENDING
  APPROVED
  REJECTED
  USED
  EXPIRED
}